---
# This playbook contains common plays that will be run on all nodes.

- name: conky | Check user  
  user: name={{conky_owner}} state=present
  
- name: conky | Check user home directory
  stat: path={{conky_owner_home}}
  register: home_present

- debug: msg=" conky | Path exists and is a directory"
  when: home_present.stat.isdir is defined and home_present.stat.isdir == true 

- name: conky | Create temporary directory
  shell: mktemp -d
  register: tempdir
  sudo: true
  tags: conky_setup
  
- name: conky | Add conky repo (apt)
  apt_repository: repo="ppa:norsetto/ppa" update_cache=yes state={{ conky_repository_state }}
  when: ( ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu' )  and ( conky_enabled or conky_manager_enabled ) and (ansible_distribution_version not in ['12.04','14.04'])
  tags: conky_setup
  
- name: conky | Add conky repo (apt)
  apt_repository: repo="deb http://ppa.launchpad.net/noobslab/noobslab-conky/ubuntu {{ansible_lsb.codename}} main" update_cache=yes state={{ conky_repository_state }}
  when: ( ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu' )  and ( conky_enabled or conky_manager_enabled ) and (ansible_distribution_version in ['12.04','14.04'])
  tags: conky_setup
    
#- name: conky | Add conky techno repo (apt)
#  apt_repository: repo="deb http://ppa.launchpad.net/noobslab/noobslab-conky/ubuntu {{ansible_lsb.codename}} main" update_cache=yes state={{ conky_repository_state }}
#  when: ( ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu' )  and ( conky_enabled or conky_techno_enabled )
#  tags: conky_setup
  
- name: conky | Add conky manager repo (apt)
  apt_repository: repo="ppa:teejee2008/ppa" update_cache=yes state={{ conky_repository_state }}
  when: ( ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu' ) and conky_manager_enabled
  tags: conky_setup
  
- name: conky | Install conky (apt)
  apt: pkg={{ item }} update_cache=yes state={{ conky_pkg_state }}
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
  tags: conky_setup
  with_items:
#   - conky
   - conky-all
   - p7zip
#   - unace
#   - unrar
#   - zip
#   - unzip
#   - p7zip-full
#   - p7zip-rar
#   - sharutils
#   - rar
#   - uudeview
#   - mpack
#   - lha
#   - arj
#   - cabextract
#   - file-roller
  when: ( ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu' ) and conky_enabled

- name: conky | Install conky techno (apt)
  apt: pkg={{ item }} update_cache=yes state={{ conky_pkg_state }}
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
  tags: conky_setup
  with_items:
   - techno-conky
  when: ( ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu' ) and conky_techno_enabled
    
- name: conky | Install conky manager (apt)
  apt: pkg={{ item }} update_cache=yes state={{ conky_pkg_state }}
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
  tags: conky_setup
  with_items:
   - conky-manager
  when: ( ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu' ) and conky_manager_enabled
  
#- name: conky | Download themes if we don't have it
#  sudo: False
#  get_url: url={{ conky_themes_url }}  dest={{ conky_home }}/ force=no

#TODO automate import themes in conky manager

#cd ~/.conky
#tar czvf default-themes-extra-1.tar.gz *

- name: conky | Copy the themes to be processed
  copy: src=default-themes-extra-1.tar.gz dest={{ conky_dir_tmp }}/default-themes-extra-1.tar.gz mode=0755 owner={{ conky_owner }} group={{ conky_group }}
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
  tags: configure

- name: conky | Create base directory
  file: 
    dest="{{conky_home}}"
    state=directory
    owner="{{conky_owner}}"
    group="{{conky_group}}"
  tags: configure
    
- name: conky | Unpack conky themes
  action: command creates={{ conky_home }}/todo chdir={{ conky_home }} tar zxvf {{ conky_dir_tmp }}/default-themes-extra-1.tar.gz --owner={{ conky_owner }}
#  ignore_errors: True
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
  tags: configure
  
- name: conky | Copy the conky startup script
  template: src=conky-startup.sh-{{ ansible_distribution }}.j2 dest={{ conky_home }}/conky-startup.sh mode=0755
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
  tags: configure

#TODO start ~/.conky/startconky.sh on startup for instance in .bashrc file

- name: conky | Install conky sensor (apt)
  apt: pkg={{ item }} update_cache=yes state={{ conky_pkg_state }}
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
  tags: conky_setup
  with_items:
   - lm-sensors
   - fancontrol
  when: ( ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu' ) and conky_sensor_enabled
  
#sudo apt-get install lm-sensors   
#sudo sensors-detect
#sudo service kmod start
#NOK sudo apt-get install fancontrol
#sudo apt-get install psensor
#launch gui with
#sudo psensor

- name: conky | Copy the conky init script
  template: src=conky.sh-{{ ansible_distribution }}.j2 dest=/etc/init.d/conky mode=0755
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
  tags: configure

- name: conky | Start the conky service
  service: name=conky state=started enabled=true
  tags: service

- name: conky | Cleanup temporary directory
  file: name={{ tempdir.stdout }} state=absent
  tags: conky_setup
